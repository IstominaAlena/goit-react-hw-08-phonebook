{"version":3,"sources":["redux/contacts/contactsOperations.js","components/Header/Header.module.css","shared/functions/tokenFn.js","components/UserMenu/UserMenu.module.css","shared/components/Button/Button.module.css","shared/components/Button/Button.jsx","redux/contacts/filterAction.js","components/Spinner/Spinner.jsx","redux/auth/authOperations.js","redux/auth/authSlice.js","redux/contacts/contactsSlice.js","redux/store.js","redux/auth/authSelectors.js","components/UserMenu/UserMenu.jsx","components/Header/Header.jsx","components/PrivatRoute/PrivateRoute.jsx","components/PublicRoute/PublicRoute.jsx","components/Routes/Routes.jsx","App.js","index.js"],"names":["path","getContacts","createAsyncThunk","_","a","rejectWithValue","getState","state","persistedToken","auth","token","set","axios","get","data","message","addContact","contact","post","responsedContact","id","deleteContact","delete","module","exports","defaults","headers","common","Authorization","unset","Button","type","text","onClick","className","undefined","s","submitBtn","defaultProps","filterContacts","createAction","Spinner","SpinnerDotted","style","color","position","top","left","transform","baseURL","signupUser","user","loginUser","logoutUser","refreshUser","authSlice","createSlice","name","initialState","email","isLoggedIn","refreshStatus","error","extraReducers","pending","fulfilled","payload","rejected","status","contactSlice","items","filter","push","newItems","item","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReduser","contacts","contactsReduser","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","logger","devTools","process","persistor","persistStore","getIsLoggedIn","getUserName","getRefreshStatus","UserMenu","dispatch","useDispatch","useSelector","Header","navigation","exact","to","link","activeClassName","active","PrivateRoute","children","redirectTo","routeProps","PublicRoute","redirected","shouldRedirect","HomePage","lazy","LoginPage","SignupPage","ContactsPage","Routes","fallback","App","useEffect","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.6dab66e7.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport { createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\nimport { token } from '../../shared/functions/tokenFn';\r\n\r\nconst path = '/contacts';\r\n\r\nexport const getContacts = createAsyncThunk(\r\n  'contacts/getContacts',\r\n  async (_, { rejectWithValue, getState }) => {\r\n    const state = getState();\r\n    const persistedToken = state.auth.token;\r\n\r\n    if (!persistedToken) {\r\n      return;\r\n    }\r\n\r\n    token.set(persistedToken);\r\n    try {\r\n      const { data } = await axios.get(path);\r\n      return data;\r\n    } catch (error) {\r\n      return rejectWithValue(error.message);\r\n    }\r\n  }\r\n);\r\n\r\nexport const addContact = createAsyncThunk(\r\n  'contacts/addContact',\r\n  async (contact, { rejectWithValue }) => {\r\n    try {\r\n      const { data } = await axios.post(path, contact);\r\n      const responsedContact = {\r\n        ...contact,\r\n        id: data.id,\r\n      };\r\n      return responsedContact;\r\n    } catch (error) {\r\n      return rejectWithValue(error.message);\r\n    }\r\n  }\r\n);\r\n\r\nexport const deleteContact = createAsyncThunk(\r\n  'contacts/deleteContact',\r\n  async (id, { rejectWithValue }) => {\r\n    try {\r\n      await axios.delete(path + '/' + id);\r\n      return id;\r\n    } catch (error) {\r\n      return rejectWithValue(error.message);\r\n    }\r\n  }\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header-section\":\"Header_header-section__1V0ag\",\"navigation\":\"Header_navigation__2449L\",\"link\":\"Header_link__2EMFR\",\"active\":\"Header_active__18yHv\"};","import axios from 'axios';\r\n\r\nexport const token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user-container\":\"UserMenu_user-container__35Ya0\",\"name\":\"UserMenu_name__27Wwb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logout\":\"Button_logout__16mxN\",\"submitBtn\":\"Button_submitBtn___hEgQ\",\"btn\":\"Button_btn__2zNiD\"};","import PropTypes from 'prop-types';\r\nimport s from './Button.module.css';\r\n\r\nconst Button = ({ type, text, onClick, className }) => {\r\n  return (\r\n    <button\r\n      onClick={onClick ? onClick : undefined}\r\n      type={type}\r\n      className={type === 'submit' ? s.submitBtn : s[className]}\r\n    >\r\n      {text}\r\n    </button>\r\n  );\r\n};\r\nexport default Button;\r\n\r\nButton.defaultProps = {\r\n  type: 'button',\r\n  onClick: undefined,\r\n  className: 'btn',\r\n};\r\n\r\nButton.propTypes = {\r\n  type: PropTypes.string,\r\n  text: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func,\r\n};\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const filterContacts = createAction('filterContacts');\r\n","import { SpinnerDotted } from \"spinners-react\";\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <SpinnerDotted\r\n      style={{\r\n        color: \"rgb(21, 180, 243)\",\r\n        position: \"fixed\",\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n        transform: \"translate(-50%, -50%)\",\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import axios from 'axios';\r\nimport { createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\nimport { token } from '../../shared/functions/tokenFn';\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\r\n\r\nconst path = {\r\n  SIGNUP: '/users/signup',\r\n  LOGIN: '/users/login',\r\n  LOGOUT: '/users/logout',\r\n  CURRENT: '/users/current',\r\n};\r\n\r\nexport const signupUser = createAsyncThunk('auth/signupUser', async (user, { rejectWithValue }) => {\r\n  try {\r\n    const { data } = await axios.post(path.SIGNUP, user);\r\n    token.set(data.token);\r\n    return data;\r\n  } catch (error) {\r\n    return rejectWithValue(error.message);\r\n  }\r\n});\r\n\r\nexport const loginUser = createAsyncThunk('auth/loginUser', async (user, { rejectWithValue }) => {\r\n  try {\r\n    const { data } = await axios.post(path.LOGIN, user);\r\n    token.set(data.token);\r\n    return data;\r\n  } catch (error) {\r\n    return rejectWithValue(error.message);\r\n  }\r\n});\r\n\r\nexport const logoutUser = createAsyncThunk('auth/logoutUser', async (_, { rejectWithValue }) => {\r\n  try {\r\n    await axios.post(path.LOGOUT);\r\n    token.unset();\r\n    return;\r\n  } catch (error) {\r\n    return rejectWithValue(error.message);\r\n  }\r\n});\r\n\r\nexport const refreshUser = createAsyncThunk(\r\n  'auth/refreshUser',\r\n  async (_, { rejectWithValue, getState }) => {\r\n    const state = getState();\r\n    const persistedToken = state.auth.token;\r\n\r\n    if (persistedToken === 'null') {\r\n      return;\r\n    }\r\n\r\n    token.set(persistedToken);\r\n    try {\r\n      const { data } = await axios.get(path.CURRENT);\r\n      return data;\r\n    } catch (error) {\r\n      return rejectWithValue(error.message);\r\n    }\r\n  }\r\n);\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport { signupUser, loginUser, logoutUser, refreshUser } from './authOperations';\r\n\r\nconst initialState = {\r\n  user: { name: null, email: null },\r\n  token: null,\r\n  isLoggedIn: false,\r\n  refreshStatus: false,\r\n  error: null,\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  extraReducers: {\r\n    [signupUser.pending](state) {\r\n      state.error = null;\r\n    },\r\n    [signupUser.fulfilled](state, { payload }) {\r\n      state.user = payload.user;\r\n      state.token = payload.token;\r\n      state.isLoggedIn = true;\r\n      state.error = null;\r\n    },\r\n    [signupUser.rejected](state, { payload }) {\r\n      state.error = payload;\r\n    },\r\n\r\n    [loginUser.pending](state) {\r\n      state.error = null;\r\n    },\r\n    [loginUser.fulfilled](state, { payload }) {\r\n      state.user = payload.user;\r\n      state.token = payload.token;\r\n      state.isLoggedIn = true;\r\n      state.error = null;\r\n    },\r\n    [loginUser.rejected](state, { payload }) {\r\n      state.status = 'rejected';\r\n      state.error = payload;\r\n    },\r\n\r\n    [logoutUser.pending](state) {\r\n      state.error = null;\r\n    },\r\n    [logoutUser.fulfilled](state) {\r\n      state.user = { name: null, email: null };\r\n      state.token = null;\r\n      state.isLoggedIn = false;\r\n      state.error = null;\r\n    },\r\n    [logoutUser.rejected](state, { payload }) {\r\n      state.error = payload;\r\n    },\r\n\r\n    [refreshUser.pending](state) {\r\n      state.refreshStatus = true;\r\n      state.error = null;\r\n    },\r\n    [refreshUser.fulfilled](state, { payload }) {\r\n      state.user = payload;\r\n      state.isLoggedIn = true;\r\n      state.refreshStatus = false;\r\n      state.error = null;\r\n    },\r\n    [refreshUser.rejected](state, { payload }) {\r\n      state.refreshStatus = false;\r\n      state.error = payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport default authSlice.reducer;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nimport { getContacts, addContact, deleteContact } from './contactsOperations';\r\n\r\nimport { filterContacts } from './filterAction';\r\n\r\nconst initialState = {\r\n  items: [],\r\n  filter: '',\r\n  status: 'idle',\r\n  error: null,\r\n};\r\n\r\nconst contactSlice = createSlice({\r\n  name: 'contact',\r\n  initialState,\r\n  extraReducers: {\r\n    [getContacts.pending](state) {\r\n      state.status = 'pending';\r\n      state.error = null;\r\n    },\r\n    [getContacts.fulfilled](state, { payload }) {\r\n      state.status = 'resolved';\r\n      state.items = payload;\r\n    },\r\n    [getContacts.rejected](state, { payload }) {\r\n      state.status = 'rejected';\r\n      state.error = payload;\r\n    },\r\n\r\n    [addContact.pending](state) {\r\n      state.status = 'pending';\r\n      state.error = null;\r\n    },\r\n    [addContact.fulfilled](state, { payload }) {\r\n      state.status = 'resolved';\r\n      state.items.push(payload);\r\n    },\r\n    [addContact.rejected](state, { payload }) {\r\n      state.status = 'rejected';\r\n      state.error = payload;\r\n    },\r\n\r\n    [deleteContact.pending](state) {\r\n      state.status = 'pending';\r\n      state.error = null;\r\n    },\r\n    [deleteContact.fulfilled](state, { payload }) {\r\n      state.status = 'resolved';\r\n      const newItems = state.items.filter(item => item.id !== payload);\r\n      state.items = newItems;\r\n    },\r\n    [deleteContact.rejected](state, { payload }) {\r\n      state.status = 'rejected';\r\n      state.error = payload;\r\n    },\r\n    [filterContacts.type](state, { payload }) {\r\n      state.filter = payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport default contactSlice.reducer;\r\n","// process - глобальная переменная в Node.js\r\n// process.env.NODE_ENV - какая стадия проекта (девелопмент, продакшн...)\r\n\r\nimport { configureStore } from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport logger from 'redux-logger';\r\n\r\nimport { default as authReduser } from './auth/authSlice';\r\nimport { default as contactsReduser } from './contacts/contactsSlice';\r\n\r\nconst authPersistConfig = {\r\n  key: 'auth/token',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    auth: persistReducer(authPersistConfig, authReduser),\r\n    contacts: contactsReduser,\r\n  },\r\n  middleware: getDefaultMiddleware =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }).concat(logger),\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","export const getIsLoggedIn = state => state.auth.isLoggedIn;\r\nexport const getUserName = state => state.auth.user.name;\r\nexport const getRefreshStatus = state => state.auth.refreshStatus;\r\n","import { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { logoutUser } from '../../redux/auth/authOperations';\r\nimport { getUserName } from '../../redux/auth/authSelectors';\r\n\r\nimport Button from '../../shared/components/Button';\r\nimport s from './UserMenu.module.css';\r\n\r\nconst UserMenu = () => {\r\n  const dispatch = useDispatch();\r\n  const name = useSelector(getUserName);\r\n\r\n  return (\r\n    <div className={s['user-container']}>\r\n      <p className={s.text}>\r\n        Welcome back <span className={s.name}>{name}</span>\r\n      </p>\r\n      <Button\r\n        text=\"Logout\"\r\n        type=\"button\"\r\n        className={'logout'}\r\n        onClick={() => dispatch(logoutUser())}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport default UserMenu;\r\n","import { useSelector } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport { getIsLoggedIn } from '../../redux/auth/authSelectors';\r\n\r\nimport UserMenu from '../UserMenu';\r\n\r\nimport s from './Header.module.css';\r\n\r\nconst Header = () => {\r\n  const isLoggedIn = useSelector(getIsLoggedIn);\r\n\r\n  return (\r\n    <header className={s['header-section']}>\r\n      <nav className={s.navigation}>\r\n        <NavLink exact to=\"/\" className={s.link} activeClassName={s.active}>\r\n          Home\r\n        </NavLink>\r\n\r\n        {isLoggedIn && (\r\n          <NavLink to=\"/contacts\" className={s.link} activeClassName={s.active}>\r\n            My phonebook\r\n          </NavLink>\r\n        )}\r\n\r\n        {!isLoggedIn && (\r\n          <NavLink to=\"/login\" className={s.link} activeClassName={s.active}>\r\n            LogIn\r\n          </NavLink>\r\n        )}\r\n      </nav>\r\n      {isLoggedIn && <UserMenu />}\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import PropTypes from 'prop-types';\r\nimport { useSelector } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nimport { getIsLoggedIn } from '../../redux/auth/authSelectors';\r\n\r\nconst PrivateRoute = ({ children, redirectTo = '/', ...routeProps }) => {\r\n  const isLoggedIn = useSelector(getIsLoggedIn);\r\n  return <Route {...routeProps}>{isLoggedIn ? children : <Redirect to={redirectTo} />}</Route>;\r\n};\r\nexport default PrivateRoute;\r\n\r\nPrivateRoute.propTypes = {\r\n  children: PropTypes.node,\r\n  redirectTo: PropTypes.string,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport { useSelector } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nimport { getIsLoggedIn } from '../../redux/auth/authSelectors';\r\n\r\nconst PublicRoute = ({ children, redirected = false, redirectTo = '/', ...routeProps }) => {\r\n  const isLoggedIn = useSelector(getIsLoggedIn);\r\n  const shouldRedirect = isLoggedIn && redirected;\r\n  return <Route {...routeProps}>{shouldRedirect ? <Redirect to={redirectTo} /> : children}</Route>;\r\n};\r\nexport default PublicRoute;\r\n\r\nPublicRoute.propTypes = {\r\n  children: PropTypes.node,\r\n  redirectTo: PropTypes.string,\r\n  redirected: PropTypes.bool,\r\n};\r\n","import { Switch } from 'react-router-dom';\r\n\r\nimport { lazy, Suspense } from 'react';\r\n\r\nimport Spinner from '../Spinner';\r\nimport PrivateRoute from '../PrivatRoute';\r\nimport PublicRoute from '../PublicRoute';\r\n\r\nconst HomePage = lazy(() => import('../../pages/HomePage' /* webpackChunkName: \"home-page\" */));\r\nconst LoginPage = lazy(() => import('../../pages/LoginPage' /* webpackChunkName: \"login-page\" */));\r\nconst SignupPage = lazy(() =>\r\n  import('../../pages/SignupPage' /* webpackChunkName: \"signup-page\" */)\r\n);\r\nconst ContactsPage = lazy(() =>\r\n  import('../../pages/ContactsPage' /* webpackChunkName: \"contacts-page\" */)\r\n);\r\n\r\nconst Routes = () => {\r\n  return (\r\n    <>\r\n      <Suspense fallback={<Spinner />}>\r\n        <Switch>\r\n          <PublicRoute exact path=\"/\">\r\n            <HomePage />\r\n          </PublicRoute>\r\n\r\n          <PublicRoute path=\"/login\" redirected redirectTo=\"/contacts\">\r\n            <LoginPage />\r\n          </PublicRoute>\r\n\r\n          <PublicRoute path=\"/signup\" redirected>\r\n            <SignupPage />\r\n          </PublicRoute>\r\n\r\n          <PrivateRoute path=\"/contacts\" redirectTo=\"/login\">\r\n            <ContactsPage />\r\n          </PrivateRoute>\r\n        </Switch>\r\n      </Suspense>\r\n    </>\r\n  );\r\n};\r\nexport default Routes;\r\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { refreshUser } from './redux/auth/authOperations';\nimport { getRefreshStatus } from './redux/auth/authSelectors';\n\nimport Header from './components/Header';\nimport Routes from './components/Routes';\n\nimport './styles/App.css';\n\nexport default function App() {\n  const dispatch = useDispatch();\n  const refreshStatus = useSelector(getRefreshStatus);\n\n  useEffect(() => {\n    dispatch(refreshUser());\n  }, [dispatch]);\n  return (\n    !refreshStatus && (\n      <>\n        <Header />\n        <Routes />\n      </>\n    )\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nimport { store, persistor } from './redux/store';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}