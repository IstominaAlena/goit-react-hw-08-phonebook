{"version":3,"sources":["components/Error/Error.module.css","redux/contacts/contactsSelectors.js","shared/components/Section/Section.jsx","components/FormContacts/FormContacts.jsx","components/FilterInput/FilterInput.jsx","components/ContactList/ContactList.jsx","components/Error/Error.jsx","pages/ContactsPage/ContactsPage.jsx","../node_modules/nanoid/index.browser.js","shared/components/Input/Input.jsx","shared/functions/onFormFn.js","shared/components/Input/Input.module.css","shared/components/Section/Section.module.css","components/FormContacts/FormContacts.module.css","../node_modules/cartoon-avatar/index.js","../node_modules/cartoon-avatar/lib/cartoon-avatar.js","../node_modules/cartoon-avatar/config.js","components/ContactList/ContactList.module.css"],"names":["module","exports","getFilter","state","contacts","filter","getItems","items","getStatus","status","Section","title","children","classEl","className","styles","container","forChildrens","FormContacts","dispatch","useDispatch","useSelector","onSubmit","e","preventDefault","contact","dataCapture","name","number","alert","lowerCaseName","toLowerCase","findInArray","find","addContact","checkContact","resetForm","s","form","id","Input","labelName","type","pattern","placeholderValue","Button","text","FilterInput","value","onChange","target","filterContacts","ContactList","contactList","lowerCaseFilter","includes","filterContactsHandler","map","contactItem","src","toonavatar","generate_avatar","alt","width","contactImg","onClick","deleteContact","memo","Error","error","ContactPage","useEffect","getContacts","Spinner","props","size","bytes","crypto","getRandomValues","Uint8Array","byte","toString","toUpperCase","nanoid","filterComponent","formComponent","htmlFor","formLabel","formInput","placeholder","defaultProps","undefined","formElements","FormData","currentTarget","obj","forEach","document","querySelector","querySelectorAll","input","require","config","options","gender","getRandomInt","trim","getGender","MALE_IMAGE_COUNT","FEMALE_IMAGE_COUNT","Math","round","min","max","floor","random"],"mappings":"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","file":"static/js/contacts-page.8cc87595.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"error-container\":\"Error_error-container__X-Viu\",\"error-text\":\"Error_error-text__3lVge\"};","export const getFilter = state => state.contacts.filter;\r\nexport const getItems = state => state.contacts.items;\r\nexport const getStatus = state => state.contacts.status;\r\n","import PropTypes from 'prop-types';\r\nimport styles from './Section.module.css';\r\n\r\nconst Section = ({ title, children, classEl }) => {\r\n  return (\r\n    <section className={styles[classEl]}>\r\n      <div className={styles.container}>\r\n        <h2 className={styles.title}>{title}</h2>\r\n        <div className={styles.forChildrens}>{children}</div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n","import { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { getItems } from '../../redux/contacts/contactsSelectors';\r\nimport { addContact } from '../../redux/contacts/contactsOperations';\r\nimport { dataCapture, resetForm } from '../../shared/functions/onFormFn';\r\n\r\nimport Input from '../../shared/components/Input';\r\nimport Button from '../../shared/components/Button';\r\n\r\nimport s from './FormContacts.module.css';\r\n\r\nconst FormContacts = () => {\r\n  const dispatch = useDispatch();\r\n  const items = useSelector(getItems);\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const contact = dataCapture(e);\r\n\r\n    const { name, number } = contact;\r\n\r\n    if (!name || !number) {\r\n      return alert('Please fill the form');\r\n    }\r\n\r\n    checkContact(contact);\r\n\r\n    resetForm('contactForm');\r\n  }\r\n\r\n  function checkContact(contact) {\r\n    const { name } = contact;\r\n    const lowerCaseName = name.toLowerCase();\r\n\r\n    const findInArray = items.find(({ name }) => {\r\n      const lowerCaseStateName = name.toLowerCase();\r\n      return lowerCaseStateName === lowerCaseName;\r\n    });\r\n\r\n    if (findInArray) {\r\n      return alert(`${name} is already in your contacts!`);\r\n    }\r\n\r\n    dispatch(addContact(contact));\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit} className={s.form} id=\"contactForm\">\r\n        <Input\r\n          labelName=\"Name\"\r\n          type=\"text\"\r\n          name={'name'}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n          placeholderValue=\"Jane Doe\"\r\n        />\r\n\r\n        <Input\r\n          labelName=\"Number\"\r\n          type=\"tel\"\r\n          name={'number'}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n          placeholderValue=\"+38-099-123-45-67\"\r\n        />\r\n\r\n        <Button type=\"submit\" text=\"Add contact\" />\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FormContacts;\r\n","import Input from '../../shared/components/Input';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { getFilter } from '../../redux/contacts/contactsSelectors';\r\nimport { filterContacts } from '../../redux/contacts/filterAction';\r\n\r\nconst FilterInput = () => {\r\n  const filter = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n\r\n  function filterChangeHandler(e) {\r\n    const { value } = e.target;\r\n    dispatch(filterContacts(value));\r\n  }\r\n  return (\r\n    <>\r\n      <Input\r\n        labelName=\"Find contact by name\"\r\n        value={filter}\r\n        onChange={filterChangeHandler}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n        placeholderValue=\"Search\"\r\n      />\r\n    </>\r\n  );\r\n};\r\nexport default FilterInput;\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport { memo } from 'react';\r\nimport toonavatar from 'cartoon-avatar';\r\n\r\nimport { deleteContact } from '../../redux/contacts/contactsOperations';\r\nimport { getFilter, getItems } from '../../redux/contacts/contactsSelectors';\r\n\r\nimport Button from '../../shared/components/Button';\r\n\r\nimport s from './ContactList.module.css';\r\n\r\nconst ContactList = () => {\r\n  const filter = useSelector(getFilter);\r\n  const items = useSelector(getItems);\r\n  const dispatch = useDispatch();\r\n\r\n  function filterContactsHandler() {\r\n    const lowerCaseFilter = filter.toLowerCase();\r\n\r\n    const filteredContacts = items.filter(({ name }) => {\r\n      const lowerCaseName = name.toLowerCase();\r\n      return lowerCaseName.includes(lowerCaseFilter);\r\n    });\r\n\r\n    return filteredContacts;\r\n  }\r\n\r\n  return (\r\n    <ul className={s.contactList}>\r\n      {filterContactsHandler().map(({ id, name, number }) => (\r\n        <li key={id} className={s.contactItem}>\r\n          <img src={toonavatar.generate_avatar()} alt=\"img\" width=\"60\" className={s.contactImg} />\r\n          <div>\r\n            <p>{name}:</p>\r\n            <p>{number}</p>\r\n          </div>\r\n\r\n          <Button type=\"button\" text=\"&#128473;\" onClick={() => dispatch(deleteContact(id))} />\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default memo(ContactList);\r\n","import PropTypes from 'prop-types';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport s from './Error.module.css';\r\n\r\nconst Error = ({ text }) => {\r\n  const error = useSelector(state => state[text].error);\r\n  return (\r\n    <div className={s['error-container']}>\r\n      <img\r\n        src={'https://icons.iconarchive.com/icons/gakuseisean/ivista-2/128/Alarm-Error-icon.png'}\r\n        alt=\"error\"\r\n        width=\"50\"\r\n        className={s['error-img']}\r\n      />\r\n      <p className={s['error-text']}>\r\n        <span>Error: </span>\r\n        {error}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\nexport default Error;\r\n\r\nError.propTypes = {\r\n  text: PropTypes.string,\r\n};\r\n","import { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { getContacts } from '../../redux/contacts/contactsOperations';\r\nimport { getStatus } from '../../redux/contacts/contactsSelectors';\r\n\r\nimport Section from '../../shared/components/Section';\r\nimport FormContacts from '../../components/FormContacts';\r\nimport FilterInput from '../../components/FilterInput';\r\nimport ContactList from '../../components/ContactList';\r\nimport Error from '../../components/Error';\r\nimport Spinner from '../../components/Spinner';\r\n\r\nconst ContactPage = () => {\r\n  const dispatch = useDispatch();\r\n  const status = useSelector(getStatus);\r\n\r\n  useEffect(() => {\r\n    dispatch(getContacts());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      {status === 'pending' && <Spinner />}\r\n      <Section title={'Phonebook'} classEl={'phonebook'}>\r\n        <FormContacts />\r\n        <FilterInput />\r\n      </Section>\r\n\r\n      <Section title={'Contacts'} classEl={'contacts'}>\r\n        {status === 'rejected' && <Error text=\"contacts\" />}\r\n        {status === 'resolved' && <ContactList />}\r\n      </Section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactPage;\r\n","import { urlAlphabet } from './url-alphabet/index.js'\nif (process.env.NODE_ENV !== 'production') {\n  if (\n    typeof navigator !== 'undefined' &&\n    navigator.product === 'ReactNative' &&\n    typeof crypto === 'undefined'\n  ) {\n    throw new Error(\n      'React Native does not have a built-in secure random generator. ' +\n        'If you don’t need unpredictable IDs use `nanoid/non-secure`. ' +\n        'For secure IDs, import `react-native-get-random-values` ' +\n        'before Nano ID.'\n    )\n  }\n  if (typeof msCrypto !== 'undefined' && typeof crypto === 'undefined') {\n    throw new Error(\n      'Import file with `if (!window.crypto) window.crypto = window.msCrypto`' +\n        ' before importing Nano ID to fix IE 11 support'\n    )\n  }\n  if (typeof crypto === 'undefined') {\n    throw new Error(\n      'Your browser does not have secure random generator. ' +\n        'If you don’t need unpredictable IDs, you can use nanoid/non-secure.'\n    )\n  }\n}\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, size, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * size) / alphabet.length)\n  return () => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size) => customRandom(alphabet, size, random)\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","import PropTypes from 'prop-types';\r\nimport { nanoid } from 'nanoid';\r\nimport styles from './Input.module.css';\r\n\r\nconst Input = props => {\r\n  const id = nanoid();\r\n  const { labelName, value, onChange, type, name, pattern, title, placeholderValue } = props;\r\n\r\n  return (\r\n    <div className={name === 'filter' ? styles.filterComponent : styles.formComponent}>\r\n      <label htmlFor={id} className={styles.formLabel}>\r\n        {labelName}:\r\n      </label>\r\n      <input\r\n        className={styles.formInput}\r\n        id={id}\r\n        value={value}\r\n        onChange={onChange}\r\n        type={type}\r\n        name={name}\r\n        pattern={pattern}\r\n        title={title}\r\n        placeholder={placeholderValue}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n\r\nInput.defaultProps = {\r\n  type: 'text',\r\n  placeholder: undefined,\r\n};\r\n\r\nInput.propTypes = {\r\n  labelName: PropTypes.string,\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  type: PropTypes.string,\r\n  name: PropTypes.string,\r\n  pattern: PropTypes.string,\r\n  title: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n};\r\n","export function dataCapture(e) {\r\n  const formElements = new FormData(e.currentTarget);\r\n  const obj = {};\r\n\r\n  formElements.forEach((value, name) => (obj[name] = value));\r\n\r\n  return obj;\r\n}\r\n\r\nexport function resetForm(id) {\r\n  const form = document.querySelector(`#${id}`);\r\n  const inputs = form.querySelectorAll('input');\r\n\r\n  inputs.forEach(input => (input.value = ''));\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formComponent\":\"Input_formComponent__3oLmR\",\"filterComponent\":\"Input_filterComponent__3Aah-\",\"formLabel\":\"Input_formLabel__3N9O3\",\"formInput\":\"Input_formInput__3gIDN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"Section_contacts__Gg5B-\",\"phonebook\":\"Section_phonebook__1TAIY\",\"container\":\"Section_container__2lFzm\",\"title\":\"Section_title__1qmO6\",\"forChildrens\":\"Section_forChildrens__1fMzE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"FormContacts_form__1ucML\"};","/* A Node Js Library to get cartoons style avatars */\r\n\r\nmodule.exports = require('./lib/cartoon-avatar');","var config = require(\"../config\");\r\n\r\nvar toonavatar = module.exports = {\r\n\t/**\r\n\t * generate_avatar will generate a cartoon avatar.\r\n\t * \r\n\t * @param {Object}\r\n\t *            options\r\n\t * @return {String}\r\n\t */\r\n\tgenerate_avatar : function(options) {\r\n\t\t/*\r\n\t\t * options = { \"gender\": \"male\" , \"id\":xxx}\r\n\t\t * \r\n\t\t */\r\n\t\tvar baseURL = \"https://raw.githubusercontent.com/Ashwinvalento/cartoon-avatar/master/lib/images/\";\r\n\t\tvar gender, id;\r\n\r\n\t\tif (typeof options != 'undefined' && options) {\r\n\t\t\t//If options are given but one of them is skipped\r\n\t\t\tif (typeof options.gender === 'undefined' ) {\r\n\t\t\t\tgender = getRandomInt(0, 1) % 2 ? \"male\" : \"female\";\r\n\t\t\t} else {\r\n\t\t\t\tgender = getGender(options.gender);\r\n\t\t\t}\r\n\r\n\t\t\tif ( typeof options.id === 'undefined') {\r\n\t\t\t\tid = getRandomInt(1,\r\n\t\t\t\t\t\tgender === \"male\" ? config.MALE_IMAGE_COUNT\r\n\t\t\t\t\t\t\t\t: config.FEMALE_IMAGE_COUNT);\r\n\t\t\t} else {\r\n\t\t\t\tid = options.id % Math.round(gender === \"male\" ? config.MALE_IMAGE_COUNT + 1\r\n\t\t\t\t\t\t: config.FEMALE_IMAGE_COUNT + 1 );\r\n\t\t\t\tid = (id === 0 ? 1 : id );\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\t//If no options are given\r\n\t\t\tgender = getRandomInt(0, 1) % 2 ? \"male\" : \"female\";\r\n\t\t\tid = getRandomInt(1,\r\n\t\t\t\t\tgender === \"male\" ? config.MALE_IMAGE_COUNT\r\n\t\t\t\t\t\t\t: config.FEMALE_IMAGE_COUNT);\r\n\t\t}\r\n\t\treturn baseURL + gender + \"/\" + id + \".png\";\r\n\t}\r\n\r\n};\r\n\r\nfunction getGender(gender) {\r\n\r\n\tgender = gender.trim().toLowerCase();\r\n\tif (gender === \"male\" || gender === \"m\") {\r\n\t\treturn \"male\";\r\n\t} else if (gender === \"female\" || gender === \"f\") {\r\n\t\treturn \"female\";\r\n\t}\r\n}\r\n\r\nfunction getRandomInt(min, max) {\r\n\treturn Math.floor(Math.random() * (max - min + 1)) + min;\r\n}","module.exports.MALE_IMAGE_COUNT = 129;\r\nmodule.exports.FEMALE_IMAGE_COUNT = 114;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__3Ej-o\",\"contactItem\":\"ContactList_contactItem__32wJr\",\"contactImg\":\"ContactList_contactImg__1reaZ\"};"],"sourceRoot":""}